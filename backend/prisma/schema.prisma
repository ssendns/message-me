generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int              @id @default(autoincrement())
  username        String           @unique
  password        String
  avatarUrl       String?
  avatarPublicId  String?  
  messagesSent    Message[]        @relation("FromUser")
  participant     ChatParticipant[]
  createdAt       DateTime         @default(now())
}

model Chat {
  id              Int               @id @default(autoincrement())
  title           String            @default("chat") 
  type            ChatType          @default(DIRECT) 
  privateKey      String?           @unique
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  participants    ChatParticipant[] 
  messages        Message[]  
  avatarUrl       String?   
  avatarPublicId  String?
}

enum ChatType {
  DIRECT
  GROUP
}

model ChatParticipant {
  id              Int               @id @default(autoincrement())
  chat            Chat              @relation(fields: [chatId], references: [id], onDelete: Cascade)
  chatId          Int
  user            User              @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          Int
  role            ParticipantRole   @default(MEMBER)
  lastReadAt      DateTime?

  @@unique([chatId, userId])
}

enum ParticipantRole {
  OWNER
  ADMIN
  MEMBER
}

model Message {
  id              Int                @id @default(autoincrement())
  chat            Chat               @relation(fields: [chatId], references: [id], onDelete: Cascade)
  chatId          Int
  from            User?              @relation("FromUser", fields: [fromId], references: [id])
  fromId          Int?

  type            MessageType        @default(TEXT)
  meta            Json?
  text            String             @default("")
  imageUrl        String?
  imagePublicId   String?

  edited          Boolean            @default(false)
  read            Boolean            @default(false)
  createdAt       DateTime           @default(now())
  updatedAt       DateTime           @updatedAt

  @@index([chatId, createdAt])
  @@index([fromId, createdAt])
}

enum MessageType {
  TEXT
  SYSTEM
}
